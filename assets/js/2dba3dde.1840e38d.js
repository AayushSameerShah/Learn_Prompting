"use strict";(self.webpackChunkpromptgineering=self.webpackChunkpromptgineering||[]).push([[726],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(a),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6086:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o=a.p+"assets/images/mrkl_task-12b7d810cd15b51db59158e42fc156bf.png",i={sidebar_position:2},l="MRKL",p={unversionedId:"advanced_applications/mrkl",id:"advanced_applications/mrkl",title:"MRKL",description:'MRKL Systems(@karpas2022mrkl) (Modular Reasoning, Knowledge and Language, pronounced "miracle")',source:"@site/docs/advanced_applications/mrkl.md",sourceDirName:"advanced_applications",slug:"/advanced_applications/mrkl",permalink:"/promptgineering/docs/advanced_applications/mrkl",draft:!1,editUrl:"https://github.com/trigaten/promptgineering/tree/v0.0.2/docs/advanced_applications/mrkl.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/promptgineering/docs/advanced_applications/overview"},next:{title:"ReAct",permalink:"/promptgineering/docs/advanced_applications/react"}},s={},c=[{value:"Notes",id:"notes",level:2},{value:"An Example",id:"an-example",level:2},{value:"More",id:"more",level:2}],m={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mrkl"},"MRKL"),(0,r.kt)("p",null,"MRKL Systems",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),' (Modular Reasoning, Knowledge and Language, pronounced "miracle")\nare a ',(0,r.kt)("strong",{parentName:"p"},"neuro-symbolic architecture")," that combine LLMs (neural computation) and external\ntools like calculators (symbolic computation)\nto solve complex problems. "),(0,r.kt)("p",null,'A simple example of a MRKL system is a LLM that can\nuse a calculator app. When asked, "What is 100*100?", the LLM can choose to\nextract the numbers from the prompt, and then use the calculator app to compute\nthe result. This might look like the following:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Q: What is 100*100?\n\nA: CALCULATOR[100*100]\n")),(0,r.kt)("p",null,"The MRKL system would see the word ",(0,r.kt)("inlineCode",{parentName:"p"},"CALCULATOR")," and plug ",(0,r.kt)("inlineCode",{parentName:"p"},"100*100")," into the calculator app.\nThis simple idea could easily be expanded to various symbolic computing tools (Calculator, Weather API, Database, etc.)."),(0,r.kt)("p",null,"Consider the following additional examples of applications: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A chatbot that is able to respond to questions about a financial database by\nextracting information to form a SQL query from a users' text.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Q: What is the price of Apple stock right now?\n\nA: DATABASE[SELECT price FROM stock WHERE company = "Apple" AND time = "now"]\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A chatbot that is able to respond to questions about the weather by extracting\ninformation from the prompt and using a weather API to retrieve the information.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Q: What is the weather like in New York?\n\nA: WEATHER API[New York]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Or even much more complex tasks that depend on multiple datasources such as the\nfollowing:")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:o,style:{width:"500px"}})),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("p",null,"MRKL was developed by ",(0,r.kt)("a",{parentName:"p",href:"https://www.ai21.com/"},"AI21")," and originally used their\nJ-1 (Jurassic 1)",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2"))," LLM."),(0,r.kt)("h2",{id:"an-example"},"An Example"),(0,r.kt)("h2",{id:"more"},"More"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://langchain.readthedocs.io/en/latest/examples/agents/mrkl.html"},"this example")," of a MRKL System\nbuilt with LangChain."),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},"Karpas, E., Abend, O., Belinkov, Y., Lenz, B., Lieber, O., Ratner, N., Shoham, Y., Bata, H., Levine, Y., Leyton-Brown, K., Muhlgay, D., Rozen, N., Schwartz, E., Shachaf, G., Shalev-Shwartz, S., Shashua, A., & Tenenholtz, M. (2022). MRKL Systems: A modular, neuro-symbolic architecture that combines large language models, external knowledge sources and discrete reasoning.\n",(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},"Lieber, O., Sharir, O., Lentz, B., & Shoham, Y. (2021). Jurassic-1: Technical Details and Evaluation, White paper, AI21 Labs, 2021. URL: Https://Uploads-Ssl. Webflow. Com/60fd4503684b466578c0d307/61138924626a6981ee09caf6_jurassic_ Tech_paper. Pdf.\n",(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0}}]);